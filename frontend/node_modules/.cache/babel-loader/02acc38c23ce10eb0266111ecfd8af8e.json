{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../axios\";\nexport const fetchMenu = createAsyncThunk('menus/fetchMenu', async () => {\n  const {\n    data\n  } = await axios.get('/menu');\n  return data;\n});\nexport const fetchRemoveMenu = createAsyncThunk('menus/fetchRemoveMenu', async id => axios.delete(`/menu/${id}`));\nexport const fetchUpdateMenu = createAsyncThunk('menus/fetchUpdateMenu', async _ref => {\n  let {\n    menuId,\n    id,\n    flag\n  } = _ref;\n  const response = await axios.patch(`/menu/${menuId}`, flag);\n  return {\n    menuId\n  };\n});\nexport const transferDishes = createAsyncThunk('menus/transferDishes', async _ref2 => {\n  let {\n    sourceMenuId,\n    targetMenuId,\n    dishIds\n  } = _ref2;\n  const response = await axios.post('/transfer-dishes', {\n    sourceMenuId,\n    targetMenuId,\n    dishIds\n  });\n  return response.data;\n});\nconst initialState = {\n  menus: {\n    items: [],\n    status: 'loading'\n  }\n};\nconst menusSlice = createSlice({\n  name: 'menus',\n  initialState,\n  reducer: {},\n  extraReducers: {\n    // Получение меню\n    [fetchMenu.pending]: state => {\n      state.menus.status = 'loading';\n    },\n    [fetchMenu.fulfilled]: (state, action) => {\n      state.menus.items = action.payload;\n      state.menus.status = 'loaded';\n    },\n    [fetchMenu.rejected]: state => {\n      state.menus.items = [];\n      state.menus.status = 'error';\n    },\n    // Удаление меню\n    [fetchRemoveMenu.pending]: (state, action) => {\n      state.menus.items = state.menus.items.filter(obj => obj._id !== action.meta.arg);\n    },\n    //Обновление меню\n    [fetchUpdateMenu.pending]: state => {\n      state.menus.status = 'loading';\n    },\n    [fetchUpdateMenu.fulfilled]: (state, action) => {\n      const updatedMenuId = action.meta.arg.menuId;\n      const updatedDishId = action.meta.arg.id;\n      const index = state.menus.items.findIndex(menu => menu._id === updatedMenuId);\n\n      if (index !== -1) {\n        // Используем map для обновления массива dishes\n        state.menus.items[index] = { ...state.menus.items[index],\n          dishes: state.menus.items[index].dishes.filter(dish => dish._id !== updatedDishId)\n        };\n      }\n\n      state.menus.status = 'loaded';\n    },\n    [transferDishes.pending]: state => {\n      state.menus.status = 'loading';\n    },\n    [transferDishes.fulfilled]: (state, action) => {\n      // Handle the successful transfer if needed\n      state.menus.status = 'loaded';\n    },\n    [transferDishes.rejected]: state => {\n      // Handle the error if needed\n      state.menus.status = 'error';\n    }\n  }\n});\nexport const menuReducer = menusSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchMenu","data","get","fetchRemoveMenu","id","delete","fetchUpdateMenu","menuId","flag","response","patch","transferDishes","sourceMenuId","targetMenuId","dishIds","post","initialState","menus","items","status","menusSlice","name","reducer","extraReducers","pending","state","fulfilled","action","payload","rejected","filter","obj","_id","meta","arg","updatedMenuId","updatedDishId","index","findIndex","menu","dishes","dish","menuReducer"],"sources":["C:/Users/admin/PycharmProjects/dz_trvp/trvp_dz/frontend/src/redux/slices/menus.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport axios from \"../../axios\";\r\n\r\nexport const fetchMenu = createAsyncThunk('menus/fetchMenu', async () => {\r\n    const {data} = await axios.get('/menu');\r\n    return data;\r\n});\r\n\r\nexport const fetchRemoveMenu = createAsyncThunk('menus/fetchRemoveMenu', async (id) =>\r\n    axios.delete(`/menu/${id}`)\r\n);\r\n\r\nexport const fetchUpdateMenu = createAsyncThunk('menus/fetchUpdateMenu', async ({ menuId, id, flag }) => {\r\n    const response = await axios.patch(`/menu/${menuId}`, flag);\r\n    return { menuId };\r\n});\r\n\r\nexport const transferDishes = createAsyncThunk('menus/transferDishes', async ({ sourceMenuId, targetMenuId, dishIds }) => {\r\n    const response = await axios.post('/transfer-dishes', { sourceMenuId, targetMenuId, dishIds });\r\n    return response.data;\r\n});\r\n\r\nconst initialState = {\r\n    menus: {\r\n        items: [],\r\n        status: 'loading'\r\n    }\r\n};\r\n\r\nconst menusSlice = createSlice({\r\n    name: 'menus',\r\n    initialState,\r\n    reducer: {},\r\n    extraReducers: {\r\n        // Получение меню\r\n        [fetchMenu.pending]: (state) => {\r\n            state.menus.status = 'loading';\r\n        },\r\n        [fetchMenu.fulfilled]: (state, action) => {\r\n            state.menus.items = action.payload;\r\n            state.menus.status = 'loaded';\r\n        },\r\n        [fetchMenu.rejected]: (state) => {\r\n            state.menus.items = [];\r\n            state.menus.status = 'error';\r\n        },\r\n\r\n        // Удаление меню\r\n        [fetchRemoveMenu.pending]: (state, action) => {\r\n            state.menus.items = state.menus.items.filter(obj => obj._id !== action.meta.arg);\r\n        },\r\n\r\n\r\n\r\n\r\n\r\n        //Обновление меню\r\n        [fetchUpdateMenu.pending]: (state) => {\r\n            state.menus.status = 'loading';\r\n        },\r\n        [fetchUpdateMenu.fulfilled]: (state, action) => {\r\n            const updatedMenuId = action.meta.arg.menuId;\r\n            const updatedDishId = action.meta.arg.id;\r\n\r\n            const index = state.menus.items.findIndex(menu => menu._id === updatedMenuId);\r\n\r\n            if (index !== -1) {\r\n                // Используем map для обновления массива dishes\r\n                state.menus.items[index] = {\r\n                    ...state.menus.items[index],\r\n                    dishes: state.menus.items[index].dishes.filter(dish => dish._id !== updatedDishId),\r\n                };\r\n            }\r\n\r\n            state.menus.status = 'loaded';\r\n        },\r\n\r\n\r\n        [transferDishes.pending]: (state) => {\r\n            state.menus.status = 'loading';\r\n        },\r\n        [transferDishes.fulfilled]: (state, action) => {\r\n            // Handle the successful transfer if needed\r\n            state.menus.status = 'loaded';\r\n        },\r\n        [transferDishes.rejected]: (state) => {\r\n            // Handle the error if needed\r\n            state.menus.status = 'error';\r\n        },\r\n\r\n\r\n    },\r\n});\r\n\r\nexport const menuReducer = menusSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}