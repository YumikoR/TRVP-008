{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\PycharmProjects\\\\dz_trvp\\\\trvp_dz\\\\frontend\\\\src\\\\pages\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\n// Home.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Grid from '@mui/material/Grid';\nimport { Menu } from '../components/Menu';\nimport { Dish } from '../components/Dish';\nimport { TagsBlock } from '../components/TagsBlock';\nimport { CommentsBlock } from '../components/CommentsBlock';\nimport { fetchMenu, transferDishes } from '../redux/slices/menus';\nimport { fetchDishes } from '../redux/slices/dishes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    menus\n  } = useSelector(state => state.menus);\n  const {\n    dishes\n  } = useSelector(state => state.dishes);\n  const userData = useSelector(state => state.auth.data); // const {menusList} = useSelector((state) => state.menu.items); // с автообновлением чет сделать\n\n  const isDishesLoading = dishes.status === 'loading';\n  const isMenusLoading = menus.status === 'loading';\n  const [selectedDishes, setSelectedDishes] = useState([]);\n  useEffect(() => {\n    dispatch(fetchMenu());\n    dispatch(fetchDishes()); // dispatch()\n  }, [dispatch]);\n  console.log(menus);\n  console.log(dishes);\n\n  const handleTransferButtonClick = () => {\n    // Handle the transfer logic using the selected dishes\n    const sourceMenuId = 'yourSourceMenuId'; // Replace with the actual source menu ID\n\n    const targetMenuId = 'yourTargetMenuId'; // Replace with the actual target menu ID\n\n    dispatch(transferDishes({\n      sourceMenuId,\n      targetMenuId,\n      dishIds: selectedDishes\n    })); // Reset the selected dishes state\n\n    setSelectedDishes([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        xs: 8,\n        item: true,\n        children: (isMenusLoading ? [...Array(5)] : menus.items).map((obj, index) => isMenusLoading ? /*#__PURE__*/_jsxDEV(Menu, {\n          isLoading: true\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Menu, {\n          id: obj._id,\n          day: `${obj.day}`,\n          user: obj.user,\n          userData: userData,\n          createdAt: new Date(obj.createdAt).toLocaleDateString('ru-RU'),\n          dishes: sortDishesByTypeOrder([...obj.dishes]),\n          option: obj.option,\n          isEditable: (userData === null || userData === void 0 ? void 0 : userData._id) === obj.user._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 4,\n        item: true,\n        children: (isDishesLoading ? [...Array(5)] : dishes.items).map((obj, index) => isDishesLoading ? /*#__PURE__*/_jsxDEV(Dish, {\n          isLoading: true\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Dish, {\n          id: obj._id,\n          name: obj.name,\n          user: obj.user,\n          type: obj.typeId.name,\n          avatarUrl: obj.avatarUrl,\n          isLoading: false,\n          isEditable: (userData === null || userData === void 0 ? void 0 : userData._id) === (obj === null || obj === void 0 ? void 0 : obj.user) // isEditable={true}\n\n        }, obj._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Home, \"DMJMmeKm6Pl8njwO+OcQrX9x/68=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Home;\n\nfunction sortDishesByTypeOrder(dishes) {\n  const dishTypesOrder = ['Горячее', 'Супы', 'Салаты', 'Сладкие напитки', 'Десерты', 'Алкогольные напитки'];\n  return dishes.sort((a, b) => {\n    const typeAIndex = dishTypesOrder.indexOf(a.typeId.name);\n    const typeBIndex = dishTypesOrder.indexOf(b.typeId.name);\n    return typeAIndex - typeBIndex;\n  });\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Tabs","Tab","Grid","Menu","Dish","TagsBlock","CommentsBlock","fetchMenu","transferDishes","fetchDishes","Home","dispatch","menus","state","dishes","userData","auth","data","isDishesLoading","status","isMenusLoading","selectedDishes","setSelectedDishes","console","log","handleTransferButtonClick","sourceMenuId","targetMenuId","dishIds","Array","items","map","obj","index","_id","day","user","Date","createdAt","toLocaleDateString","sortDishesByTypeOrder","option","name","typeId","avatarUrl","dishTypesOrder","sort","a","b","typeAIndex","indexOf","typeBIndex"],"sources":["C:/Users/admin/PycharmProjects/dz_trvp/trvp_dz/frontend/src/pages/Home.jsx"],"sourcesContent":["// Home.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport { Menu } from '../components/Menu';\r\nimport { Dish } from '../components/Dish';\r\nimport { TagsBlock } from '../components/TagsBlock';\r\nimport { CommentsBlock } from '../components/CommentsBlock';\r\nimport { fetchMenu, transferDishes } from '../redux/slices/menus';\r\nimport { fetchDishes } from '../redux/slices/dishes';\r\n\r\nexport const Home = () => {\r\n    const dispatch = useDispatch();\r\n    const { menus } = useSelector((state) => state.menus);\r\n    const { dishes } = useSelector((state) => state.dishes);\r\n    const userData = useSelector((state) => state.auth.data);\r\n    // const {menusList} = useSelector((state) => state.menu.items); // с автообновлением чет сделать\r\n\r\n    const isDishesLoading = dishes.status === 'loading';\r\n    const isMenusLoading = menus.status === 'loading';\r\n\r\n    const [selectedDishes, setSelectedDishes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchMenu());\r\n        dispatch(fetchDishes());\r\n        // dispatch()\r\n    }, [dispatch]);\r\n\r\n    console.log(menus);\r\n    console.log(dishes);\r\n\r\n\r\n    const handleTransferButtonClick = () => {\r\n        // Handle the transfer logic using the selected dishes\r\n        const sourceMenuId = 'yourSourceMenuId';  // Replace with the actual source menu ID\r\n        const targetMenuId = 'yourTargetMenuId';  // Replace with the actual target menu ID\r\n\r\n        dispatch(transferDishes({ sourceMenuId, targetMenuId, dishIds: selectedDishes }));\r\n        // Reset the selected dishes state\r\n        setSelectedDishes([]);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Grid container spacing={4}>\r\n                <Grid xs={8} item>\r\n                    {/* Ваш код для отображения меню */}\r\n                    {(isMenusLoading ? [...Array(5)] : menus.items).map((obj, index) =>\r\n                        isMenusLoading ? (\r\n                            <Menu key={index} isLoading={true} />\r\n                        ) : (\r\n                            <Menu\r\n                                id={obj._id}\r\n                                day={`${obj.day}`}\r\n                                user={obj.user}\r\n                                userData={userData}\r\n                                createdAt={new Date(obj.createdAt).toLocaleDateString('ru-RU')}\r\n                                dishes={sortDishesByTypeOrder([...obj.dishes])}\r\n                                option={obj.option}\r\n                                isEditable={userData?._id === obj.user._id}\r\n                            />\r\n                        )\r\n                    )}\r\n                </Grid>\r\n                <Grid xs={4} item>\r\n                    {(isDishesLoading ? [...Array(5)] : dishes.items).map((obj, index) =>\r\n                        isDishesLoading ? (\r\n                            <Dish key={index} isLoading={true} />\r\n                        ) : (\r\n                            <Dish\r\n                                key={obj._id}\r\n                                id={obj._id}\r\n                                name={obj.name}\r\n                                user={obj.user}\r\n                                type={obj.typeId.name}\r\n                                avatarUrl={obj.avatarUrl}\r\n                                isLoading={false}\r\n                                isEditable={userData?._id === obj?.user}\r\n                                // isEditable={true}\r\n                            />\r\n                        )\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction sortDishesByTypeOrder(dishes) {\r\n    const dishTypesOrder = ['Горячее', 'Супы', 'Салаты', 'Сладкие напитки', 'Десерты', 'Алкогольные напитки'];\r\n    return dishes.sort((a, b) => {\r\n        const typeAIndex = dishTypesOrder.indexOf(a.typeId.name);\r\n        const typeBIndex = dishTypesOrder.indexOf(b.typeId.name);\r\n\r\n        return typeAIndex - typeBIndex;\r\n    });\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}